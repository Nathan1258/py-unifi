# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.hotspot2_conf_osu import Hotspot2ConfOsu

class TestHotspot2ConfOsu(unittest.TestCase):
    """Hotspot2ConfOsu unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hotspot2ConfOsu:
        """Test Hotspot2ConfOsu
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hotspot2ConfOsu`
        """
        model = Hotspot2ConfOsu()
        if include_optional:
            return Hotspot2ConfOsu(
                description = [
                    openapi_client.models.hotspot2_conf_description.Hotspot2ConfDescription(
                        language = '', 
                        text = '', )
                    ],
                friendly_name = [
                    openapi_client.models.hotspot2_conf_friendly_name.Hotspot2ConfFriendlyName(
                        language = '', 
                        text = '', )
                    ],
                icon = [
                    openapi_client.models.hotspot2_conf_icon.Hotspot2ConfIcon(
                        name = '', )
                    ],
                method_oma_dm = True,
                method_soap_xml_spp = True,
                nai = '',
                nai2 = '',
                operating_class = '',
                server_uri = ''
            )
        else:
            return Hotspot2ConfOsu(
        )
        """

    def testHotspot2ConfOsu(self):
        """Test Hotspot2ConfOsu"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
