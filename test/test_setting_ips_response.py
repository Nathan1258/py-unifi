# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from unifi_client.models.setting_ips_response import SettingIpsResponse

class TestSettingIpsResponse(unittest.TestCase):
    """SettingIpsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SettingIpsResponse:
        """Test SettingIpsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SettingIpsResponse`
        """
        model = SettingIpsResponse()
        if include_optional:
            return SettingIpsResponse(
                data = [
                    unifi_client.models.setting_ips.SettingIps(
                        _id = '', 
                        ad_blocking_configurations = [
                            unifi_client.models.setting_ips_ad_blocking_configurations.SettingIpsAdBlockingConfigurations(
                                network_id = '', )
                            ], 
                        ad_blocking_enabled = True, 
                        advanced_filtering_preference = '', 
                        attr_hidden = True, 
                        attr_hidden_id = '', 
                        attr_no_delete = True, 
                        attr_no_edit = True, 
                        dns_filtering = True, 
                        dns_filters = [
                            unifi_client.models.setting_ips_dns_filters.SettingIpsDNSFilters(
                                allowed_sites = [
                                    ''
                                    ], 
                                blocked_sites = [
                                    ''
                                    ], 
                                blocked_tld = [
                                    ''
                                    ], 
                                description = '', 
                                filter = '', 
                                name = '', 
                                network_id = '', 
                                version = '', )
                            ], 
                        enabled_categories = [
                            ''
                            ], 
                        enabled_networks = [
                            ''
                            ], 
                        honeypot = [
                            unifi_client.models.setting_ips_honeypot.SettingIpsHoneypot(
                                ip_address = '', 
                                network_id = '', 
                                version = '', )
                            ], 
                        honeypot_enabled = True, 
                        ips_mode = '', 
                        key = '', 
                        restrict_ip_addresses = True, 
                        restrict_tor = True, 
                        restrict_torrents = True, 
                        site_id = '', 
                        suppression = unifi_client.models.setting_ips_suppression.SettingIpsSuppression(
                            alerts = [
                                unifi_client.models.setting_ips_alerts.SettingIpsAlerts(
                                    category = '', 
                                    gid = 56, 
                                    id = 56, 
                                    signature = '', 
                                    tracking = [
                                        unifi_client.models.setting_ips_tracking.SettingIpsTracking(
                                            direction = '', 
                                            mode = '', 
                                            value = '', )
                                        ], 
                                    type = '', )
                                ], 
                            whitelist = [
                                unifi_client.models.setting_ips_whitelist.SettingIpsWhitelist(
                                    direction = '', 
                                    mode = '', 
                                    value = '', )
                                ], ), )
                    ],
                meta = unifi_client.models.meta.Meta(
                    msg = '', 
                    rc = '', )
            )
        else:
            return SettingIpsResponse(
        )
        """

    def testSettingIpsResponse(self):
        """Test SettingIpsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
