# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.hotspot2_conf import Hotspot2Conf

class TestHotspot2Conf(unittest.TestCase):
    """Hotspot2Conf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Hotspot2Conf:
        """Test Hotspot2Conf
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Hotspot2Conf`
        """
        model = Hotspot2Conf()
        if include_optional:
            return Hotspot2Conf(
                id = '',
                anqp_domain_id = 56,
                attr_hidden = True,
                attr_hidden_id = '',
                attr_no_delete = True,
                attr_no_edit = True,
                capab = [
                    openapi_client.models.hotspot2_conf_capab.Hotspot2ConfCapab(
                        port = 56, 
                        protocol = '', 
                        status = '', )
                    ],
                cellular_network_list = [
                    openapi_client.models.hotspot2_conf_cellular_network_list.Hotspot2ConfCellularNetworkList(
                        mcc = 56, 
                        mnc = 56, 
                        name = '', )
                    ],
                deauth_req_timeout = 56,
                disable_dgaf = True,
                domain_name_list = [
                    ''
                    ],
                friendly_name = [
                    openapi_client.models.hotspot2_conf_friendly_name.Hotspot2ConfFriendlyName(
                        language = '', 
                        text = '', )
                    ],
                gas_advanced = True,
                gas_comeback_delay = 56,
                gas_frag_limit = 56,
                hessid = '',
                hessid_used = True,
                icons = [
                    openapi_client.models.hotspot2_conf_icons.Hotspot2ConfIcons(
                        data = '', 
                        filename = '', 
                        height = 56, 
                        language = '', 
                        media = '', 
                        name = '', 
                        size = 56, 
                        width = 56, )
                    ],
                ipaddr_type_avail_v4 = 56,
                ipaddr_type_avail_v6 = 56,
                metrics_downlink_load = 56,
                metrics_downlink_load_set = True,
                metrics_downlink_speed = 56,
                metrics_downlink_speed_set = True,
                metrics_info_at_capacity = True,
                metrics_info_link_status = '',
                metrics_info_symmetric = True,
                metrics_measurement = 56,
                metrics_measurement_set = True,
                metrics_status = True,
                metrics_uplink_load = 56,
                metrics_uplink_load_set = True,
                metrics_uplink_speed = 56,
                metrics_uplink_speed_set = True,
                nai_realm_list = [
                    openapi_client.models.hotspot2_conf_nai_realm_list.Hotspot2ConfNaiRealmList(
                        auth_ids = '', 
                        auth_vals = '', 
                        eap_method = 56, 
                        encoding = 56, 
                        name = '', 
                        status = True, )
                    ],
                name = '',
                network_access_asra = True,
                network_access_esr = True,
                network_access_internet = True,
                network_access_uesa = True,
                network_auth_type = 56,
                network_auth_url = '',
                network_type = 56,
                osu = [
                    openapi_client.models.hotspot2_conf_osu.Hotspot2ConfOsu(
                        description = [
                            openapi_client.models.hotspot2_conf_description.Hotspot2ConfDescription(
                                language = '', 
                                text = '', )
                            ], 
                        friendly_name = [
                            openapi_client.models.hotspot2_conf_friendly_name.Hotspot2ConfFriendlyName(
                                language = '', 
                                text = '', )
                            ], 
                        icon = [
                            openapi_client.models.hotspot2_conf_icon.Hotspot2ConfIcon(
                                name = '', )
                            ], 
                        method_oma_dm = True, 
                        method_soap_xml_spp = True, 
                        nai = '', 
                        nai2 = '', 
                        operating_class = '', 
                        server_uri = '', )
                    ],
                osu_ssid = '',
                qos_map_dcsp = [
                    openapi_client.models.hotspot2_conf_qos_map_dcsp.Hotspot2ConfQOSMapDcsp(
                        high = 56, 
                        low = 56, )
                    ],
                qos_map_exceptions = [
                    openapi_client.models.hotspot2_conf_qos_map_exceptions.Hotspot2ConfQOSMapExceptions(
                        dcsp = 56, 
                        up = 56, )
                    ],
                qos_map_status = True,
                roaming_consortium_list = [
                    openapi_client.models.hotspot2_conf_roaming_consortium_list.Hotspot2ConfRoamingConsortiumList(
                        name = '', 
                        oid = '', )
                    ],
                save_timestamp = '',
                site_id = '',
                t_c_filename = '',
                t_c_timestamp = 56,
                venue_group = 56,
                venue_name = [
                    openapi_client.models.hotspot2_conf_venue_name.Hotspot2ConfVenueName(
                        language = '', 
                        name = '', 
                        url = '', )
                    ],
                venue_type = 56
            )
        else:
            return Hotspot2Conf(
        )
        """

    def testHotspot2Conf(self):
        """Test Hotspot2Conf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
