# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from unifi_client.models.setting_global_switch_response import SettingGlobalSwitchResponse

class TestSettingGlobalSwitchResponse(unittest.TestCase):
    """SettingGlobalSwitchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SettingGlobalSwitchResponse:
        """Test SettingGlobalSwitchResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SettingGlobalSwitchResponse`
        """
        model = SettingGlobalSwitchResponse()
        if include_optional:
            return SettingGlobalSwitchResponse(
                data = [
                    unifi_client.models.setting_global_switch.SettingGlobalSwitch(
                        _id = '', 
                        attr_hidden = True, 
                        attr_hidden_id = '', 
                        attr_no_delete = True, 
                        attr_no_edit = True, 
                        dhcp_snoop = True, 
                        dot1x_fallback_networkconf_id = '', 
                        dot1x_portctrl_enabled = True, 
                        flowctrl_enabled = True, 
                        jumboframe_enabled = True, 
                        key = '', 
                        radiusprofile_id = '', 
                        site_id = '', 
                        stp_version = '', 
                        switch_exclusions = [
                            ''
                            ], )
                    ],
                meta = unifi_client.models.meta.Meta(
                    msg = '', 
                    rc = '', )
            )
        else:
            return SettingGlobalSwitchResponse(
        )
        """

    def testSettingGlobalSwitchResponse(self):
        """Test SettingGlobalSwitchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
