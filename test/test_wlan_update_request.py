# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from unifi_client.models.wlan_update_request import WLANUpdateRequest

class TestWLANUpdateRequest(unittest.TestCase):
    """WLANUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WLANUpdateRequest:
        """Test WLANUpdateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WLANUpdateRequest`
        """
        model = WLANUpdateRequest()
        if include_optional:
            return WLANUpdateRequest(
                id = '',
                ap_group_ids = [
                    ''
                    ],
                ap_group_mode = '',
                attr_hidden = True,
                attr_hidden_id = '',
                attr_no_delete = True,
                attr_no_edit = True,
                auth_cache = True,
                b_supported = True,
                bc_filter_enabled = True,
                bc_filter_list = [
                    ''
                    ],
                bss_transition = True,
                country_beacon = True,
                dpi_enabled = True,
                dpigroup_id = '',
                dtim_6e = 56,
                dtim_mode = '',
                dtim_na = 56,
                dtim_ng = 56,
                element_adopt = True,
                enabled = True,
                fast_roaming_enabled = True,
                group_rekey = 56,
                hide_ssid = True,
                hotspot2conf_enabled = True,
                hotspot2conf_id = '',
                iapp_enabled = True,
                is_guest = True,
                l2_isolation = True,
                log_level = '',
                mac_filter_enabled = True,
                mac_filter_list = [
                    ''
                    ],
                mac_filter_policy = '',
                mcastenhance_enabled = True,
                minrate_na_advertising_rates = True,
                minrate_na_data_rate_kbps = 56,
                minrate_na_enabled = True,
                minrate_ng_advertising_rates = True,
                minrate_ng_data_rate_kbps = 56,
                minrate_ng_enabled = True,
                minrate_setting_preference = '',
                name = '',
                name_combine_enabled = True,
                name_combine_suffix = '',
                networkconf_id = '',
                no2ghz_oui = True,
                optimize_iot_wifi_connectivity = True,
                p2p = True,
                p2p_cross_connect = True,
                pmf_cipher = '',
                pmf_mode = '',
                priority = '',
                private_preshared_keys = [
                    unifi_client.models.wlan_private_preshared_keys.WLANPrivatePresharedKeys(
                        networkconf_id = '', 
                        password = '', )
                    ],
                private_preshared_keys_enabled = True,
                proxy_arp = True,
                radius_das_enabled = True,
                radius_mac_auth_enabled = True,
                radius_macacl_empty_password = True,
                radius_macacl_format = '',
                radiusprofile_id = '',
                roam_cluster_id = 56,
                rrm_enabled = True,
                sae_anti_clogging = 56,
                sae_groups = [
                    56
                    ],
                sae_psk = [
                    unifi_client.models.wlan_sae_psk.WLANSaePsk(
                        id = '', 
                        mac = '', 
                        psk = '', 
                        vlan = 56, )
                    ],
                sae_psk_vlan_required = True,
                sae_sync = 56,
                schedule = [
                    ''
                    ],
                schedule_enabled = True,
                schedule_reversed = True,
                schedule_with_duration = [
                    unifi_client.models.wlan_schedule_with_duration.WLANScheduleWithDuration(
                        duration_minutes = 56, 
                        name = '', 
                        start_days_of_week = [
                            ''
                            ], 
                        start_hour = 56, 
                        start_minute = 56, )
                    ],
                security = '',
                setting_preference = '',
                site_id = '',
                tdls_prohibit = True,
                uapsd_enabled = True,
                uid_workspace_url = '',
                usergroup_id = '',
                vlan = 56,
                vlan_enabled = True,
                wep_idx = 56,
                wlan_band = '',
                wlan_bands = [
                    ''
                    ],
                wlangroup_id = '',
                wpa_enc = '',
                wpa_mode = '',
                wpa_psk_radius = '',
                wpa3_enhanced_192 = True,
                wpa3_fast_roaming = True,
                wpa3_support = True,
                wpa3_transition = True,
                x_iapp_key = '',
                x_passphrase = '',
                x_wep = ''
            )
        else:
            return WLANUpdateRequest(
        )
        """

    def testWLANUpdateRequest(self):
        """Test WLANUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
