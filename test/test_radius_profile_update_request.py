# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.radius_profile_update_request import RADIUSProfileUpdateRequest

class TestRADIUSProfileUpdateRequest(unittest.TestCase):
    """RADIUSProfileUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RADIUSProfileUpdateRequest:
        """Test RADIUSProfileUpdateRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RADIUSProfileUpdateRequest`
        """
        model = RADIUSProfileUpdateRequest()
        if include_optional:
            return RADIUSProfileUpdateRequest(
                id = '',
                accounting_enabled = True,
                acct_servers = [
                    openapi_client.models.radius_profile_acct_servers.RADIUSProfileAcctServers(
                        ip = '', 
                        port = 56, 
                        x_secret = '', )
                    ],
                attr_hidden = True,
                attr_hidden_id = '',
                attr_no_delete = True,
                attr_no_edit = True,
                auth_servers = [
                    openapi_client.models.radius_profile_auth_servers.RADIUSProfileAuthServers(
                        ip = '', 
                        port = 56, 
                        x_secret = '', )
                    ],
                interim_update_enabled = True,
                interim_update_interval = 56,
                name = '',
                site_id = '',
                use_usg_acct_server = True,
                use_usg_auth_server = True,
                vlan_enabled = True,
                vlan_wlan_mode = ''
            )
        else:
            return RADIUSProfileUpdateRequest(
        )
        """

    def testRADIUSProfileUpdateRequest(self):
        """Test RADIUSProfileUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
