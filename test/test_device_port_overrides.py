# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from unifi_client.models.device_port_overrides import DevicePortOverrides

class TestDevicePortOverrides(unittest.TestCase):
    """DevicePortOverrides unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DevicePortOverrides:
        """Test DevicePortOverrides
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DevicePortOverrides`
        """
        model = DevicePortOverrides()
        if include_optional:
            return DevicePortOverrides(
                aggregate_num_ports = 56,
                autoneg = True,
                dot1x_ctrl = '',
                dot1x_idle_timeout = 56,
                egress_rate_limit_kbps = 56,
                egress_rate_limit_kbps_enabled = True,
                excluded_networkconf_ids = [
                    ''
                    ],
                forward = '',
                full_duplex = True,
                isolation = True,
                lldpmed_enabled = True,
                lldpmed_notify_enabled = True,
                mirror_port_idx = 56,
                name = '',
                native_networkconf_id = '',
                op_mode = '',
                poe_mode = '',
                port_idx = 56,
                port_keepalive_enabled = True,
                port_security_enabled = True,
                port_security_mac_address = [
                    ''
                    ],
                portconf_id = '',
                priority_queue1_level = 56,
                priority_queue2_level = 56,
                priority_queue3_level = 56,
                priority_queue4_level = 56,
                setting_preference = '',
                speed = 56,
                stormctrl_bcast_enabled = True,
                stormctrl_bcast_level = 56,
                stormctrl_bcast_rate = 56,
                stormctrl_mcast_enabled = True,
                stormctrl_mcast_level = 56,
                stormctrl_mcast_rate = 56,
                stormctrl_type = '',
                stormctrl_ucast_enabled = True,
                stormctrl_ucast_level = 56,
                stormctrl_ucast_rate = 56,
                stp_port_mode = True,
                tagged_vlan_mgmt = '',
                voice_networkconf_id = ''
            )
        else:
            return DevicePortOverrides(
        )
        """

    def testDevicePortOverrides(self):
        """Test DevicePortOverrides"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
