# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from unifi_client.models.setting_usg import SettingUsg

class TestSettingUsg(unittest.TestCase):
    """SettingUsg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SettingUsg:
        """Test SettingUsg
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SettingUsg`
        """
        model = SettingUsg()
        if include_optional:
            return SettingUsg(
                id = '',
                arp_cache_base_reachable = 56,
                arp_cache_timeout = '',
                attr_hidden = True,
                attr_hidden_id = '',
                attr_no_delete = True,
                attr_no_edit = True,
                broadcast_ping = True,
                dhcp_relay_agents_packets = '',
                dhcp_relay_hop_count = 56,
                dhcp_relay_max_size = 56,
                dhcp_relay_port = 56,
                dhcp_relay_server_1 = '',
                dhcp_relay_server_2 = '',
                dhcp_relay_server_3 = '',
                dhcp_relay_server_4 = '',
                dhcp_relay_server_5 = '',
                dhcpd_hostfile_update = True,
                dhcpd_use_dnsmasq = True,
                dnsmasq_all_servers = True,
                echo_server = '',
                firewall_guest_default_log = True,
                firewall_lan_default_log = True,
                firewall_wan_default_log = True,
                ftp_module = True,
                geo_ip_filtering_block = '',
                geo_ip_filtering_countries = '',
                geo_ip_filtering_enabled = True,
                geo_ip_filtering_traffic_direction = '',
                gre_module = True,
                h323_module = True,
                icmp_timeout = 56,
                key = '',
                lldp_enable_all = True,
                mdns_enabled = True,
                mss_clamp = '',
                mss_clamp_mss = 56,
                offload_accounting = True,
                offload_l2_blocking = True,
                offload_sch = True,
                other_timeout = 56,
                pptp_module = True,
                receive_redirects = True,
                send_redirects = True,
                sip_module = True,
                site_id = '',
                syn_cookies = True,
                tcp_close_timeout = 56,
                tcp_close_wait_timeout = 56,
                tcp_established_timeout = 56,
                tcp_fin_wait_timeout = 56,
                tcp_last_ack_timeout = 56,
                tcp_syn_recv_timeout = 56,
                tcp_syn_sent_timeout = 56,
                tcp_time_wait_timeout = 56,
                tftp_module = True,
                timeout_setting_preference = '',
                udp_other_timeout = 56,
                udp_stream_timeout = 56,
                upnp_enabled = True,
                upnp_nat_pmp_enabled = True,
                upnp_secure_mode = True,
                upnp_wan_interface = ''
            )
        else:
            return SettingUsg(
        )
        """

    def testSettingUsg(self):
        """Test SettingUsg"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
