# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr
from pydantic import Field
from openapi_client.models.network_nat_outbound_ip_addresses import NetworkNATOutboundIPAddresses
from openapi_client.models.network_wan_provider_capabilities import NetworkWANProviderCapabilities
from openapi_client.models.network_wandhcp_options import NetworkWANDHCPOptions
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class Network(BaseModel):
    """
    Network
    """ # noqa: E501
    id: Optional[StrictStr] = Field(default=None, alias="_id")
    attr_hidden: Optional[StrictBool] = None
    attr_hidden_id: Optional[StrictStr] = None
    attr_no_delete: Optional[StrictBool] = None
    attr_no_edit: Optional[StrictBool] = None
    auto_scale_enabled: Optional[StrictBool] = None
    dhcp_relay_enabled: Optional[StrictBool] = None
    dhcpd_boot_enabled: Optional[StrictBool] = None
    dhcpd_boot_filename: Optional[StrictStr] = None
    dhcpd_boot_server: Optional[StrictStr] = None
    dhcpd_dns_1: Optional[StrictStr] = None
    dhcpd_dns_2: Optional[StrictStr] = None
    dhcpd_dns_3: Optional[StrictStr] = None
    dhcpd_dns_4: Optional[StrictStr] = None
    dhcpd_dns_enabled: Optional[StrictBool] = None
    dhcpd_enabled: Optional[StrictBool] = None
    dhcpd_gateway: Optional[StrictStr] = None
    dhcpd_gateway_enabled: Optional[StrictBool] = None
    dhcpd_ip_1: Optional[StrictStr] = None
    dhcpd_ip_2: Optional[StrictStr] = None
    dhcpd_ip_3: Optional[StrictStr] = None
    dhcpd_leasetime: Optional[StrictInt] = None
    dhcpd_mac_1: Optional[StrictStr] = None
    dhcpd_mac_2: Optional[StrictStr] = None
    dhcpd_mac_3: Optional[StrictStr] = None
    dhcpd_ntp_1: Optional[StrictStr] = None
    dhcpd_ntp_2: Optional[StrictStr] = None
    dhcpd_ntp_enabled: Optional[StrictBool] = None
    dhcpd_start: Optional[StrictStr] = None
    dhcpd_stop: Optional[StrictStr] = None
    dhcpd_tftp_server: Optional[StrictStr] = None
    dhcpd_time_offset: Optional[StrictInt] = None
    dhcpd_time_offset_enabled: Optional[StrictBool] = None
    dhcpd_unifi_controller: Optional[StrictStr] = None
    dhcpd_wins_1: Optional[StrictStr] = None
    dhcpd_wins_2: Optional[StrictStr] = None
    dhcpd_wins_enabled: Optional[StrictBool] = None
    dhcpd_wpad_url: Optional[StrictStr] = None
    dhcpdv6_allow_slaac: Optional[StrictBool] = None
    dhcpdv6_dns_1: Optional[StrictStr] = None
    dhcpdv6_dns_2: Optional[StrictStr] = None
    dhcpdv6_dns_3: Optional[StrictStr] = None
    dhcpdv6_dns_4: Optional[StrictStr] = None
    dhcpdv6_dns_auto: Optional[StrictBool] = None
    dhcpdv6_enabled: Optional[StrictBool] = None
    dhcpdv6_leasetime: Optional[StrictInt] = None
    dhcpdv6_start: Optional[StrictStr] = None
    dhcpdv6_stop: Optional[StrictStr] = None
    dhcpguard_enabled: Optional[StrictBool] = None
    domain_name: Optional[StrictStr] = None
    dpi_enabled: Optional[StrictBool] = None
    dpigroup_id: Optional[StrictStr] = None
    enabled: Optional[StrictBool] = None
    exposed_to_site_vpn: Optional[StrictBool] = None
    gateway_device: Optional[StrictStr] = None
    gateway_type: Optional[StrictStr] = None
    igmp_fastleave: Optional[StrictBool] = None
    igmp_groupmembership: Optional[StrictInt] = None
    igmp_maxresponse: Optional[StrictInt] = None
    igmp_mcrtrexpiretime: Optional[StrictInt] = None
    igmp_proxy_downstream: Optional[StrictBool] = None
    igmp_proxy_upstream: Optional[StrictBool] = None
    igmp_querier: Optional[StrictStr] = None
    igmp_snooping: Optional[StrictBool] = None
    igmp_supression: Optional[StrictBool] = None
    interface_mtu: Optional[StrictInt] = None
    interface_mtu_enabled: Optional[StrictBool] = None
    internet_access_enabled: Optional[StrictBool] = None
    ip_subnet: Optional[StrictStr] = None
    ipsec_dh_group: Optional[StrictInt] = None
    ipsec_dynamic_routing: Optional[StrictBool] = None
    ipsec_encryption: Optional[StrictStr] = None
    ipsec_esp_dh_group: Optional[StrictInt] = None
    ipsec_esp_encryption: Optional[StrictStr] = None
    ipsec_esp_hash: Optional[StrictStr] = None
    ipsec_esp_lifetime: Optional[StrictStr] = None
    ipsec_hash: Optional[StrictStr] = None
    ipsec_ike_dh_group: Optional[StrictInt] = None
    ipsec_ike_encryption: Optional[StrictStr] = None
    ipsec_ike_hash: Optional[StrictStr] = None
    ipsec_ike_lifetime: Optional[StrictStr] = None
    ipsec_interface: Optional[StrictStr] = None
    ipsec_key_exchange: Optional[StrictStr] = None
    ipsec_local_identifier: Optional[StrictStr] = None
    ipsec_local_identifier_enabled: Optional[StrictBool] = None
    ipsec_local_ip: Optional[StrictStr] = None
    ipsec_peer_ip: Optional[StrictStr] = None
    ipsec_pfs: Optional[StrictBool] = None
    ipsec_profile: Optional[StrictStr] = None
    ipsec_remote_identifier: Optional[StrictStr] = None
    ipsec_remote_identifier_enabled: Optional[StrictBool] = None
    ipsec_separate_ikev2_networks: Optional[StrictBool] = None
    ipv6_client_address_assignment: Optional[StrictStr] = None
    ipv6_interface_type: Optional[StrictStr] = None
    ipv6_pd_auto_prefixid_enabled: Optional[StrictBool] = None
    ipv6_pd_interface: Optional[StrictStr] = None
    ipv6_pd_prefixid: Optional[StrictStr] = None
    ipv6_pd_start: Optional[StrictStr] = None
    ipv6_pd_stop: Optional[StrictStr] = None
    ipv6_ra_enabled: Optional[StrictBool] = None
    ipv6_ra_preferred_lifetime: Optional[StrictInt] = None
    ipv6_ra_priority: Optional[StrictStr] = None
    ipv6_ra_valid_lifetime: Optional[StrictInt] = None
    ipv6_setting_preference: Optional[StrictStr] = None
    ipv6_single_network_interface: Optional[StrictStr] = None
    ipv6_subnet: Optional[StrictStr] = None
    ipv6_wan_delegation_type: Optional[StrictStr] = None
    is_nat: Optional[StrictBool] = None
    l2tp_allow_weak_ciphers: Optional[StrictBool] = None
    l2tp_interface: Optional[StrictStr] = None
    l2tp_local_wan_ip: Optional[StrictStr] = None
    local_port: Optional[StrictInt] = None
    lte_lan_enabled: Optional[StrictBool] = None
    mac_override: Optional[StrictStr] = None
    mac_override_enabled: Optional[StrictBool] = None
    mdns_enabled: Optional[StrictBool] = None
    name: Optional[StrictStr] = None
    nat_outbound_ip_addresses: Optional[List[NetworkNATOutboundIPAddresses]] = None
    network_isolation_enabled: Optional[StrictBool] = None
    networkgroup: Optional[StrictStr] = None
    openvpn_configuration: Optional[StrictStr] = None
    openvpn_configuration_filename: Optional[StrictStr] = None
    openvpn_interface: Optional[StrictStr] = None
    openvpn_local_address: Optional[StrictStr] = None
    openvpn_local_port: Optional[StrictInt] = None
    openvpn_local_wan_ip: Optional[StrictStr] = None
    openvpn_mode: Optional[StrictStr] = None
    openvpn_remote_address: Optional[StrictStr] = None
    openvpn_remote_host: Optional[StrictStr] = None
    openvpn_remote_port: Optional[StrictInt] = None
    openvpn_username: Optional[StrictStr] = None
    pptpc_require_mppe: Optional[StrictBool] = None
    pptpc_route_distance: Optional[StrictInt] = None
    pptpc_server_ip: Optional[StrictStr] = None
    pptpc_username: Optional[StrictStr] = None
    priority: Optional[StrictInt] = None
    purpose: Optional[StrictStr] = None
    radiusprofile_id: Optional[StrictStr] = None
    remote_site_id: Optional[StrictStr] = None
    remote_site_subnets: Optional[List[StrictStr]] = None
    remote_vpn_subnets: Optional[List[StrictStr]] = None
    report_wan_event: Optional[StrictBool] = None
    require_mschapv2: Optional[StrictBool] = None
    route_distance: Optional[StrictInt] = None
    setting_preference: Optional[StrictStr] = None
    single_network_lan: Optional[StrictStr] = None
    site_id: Optional[StrictStr] = None
    uid_policy_enabled: Optional[StrictBool] = None
    uid_policy_name: Optional[StrictStr] = None
    uid_public_gateway_port: Optional[StrictInt] = None
    uid_traffic_rules_allowed_ips_and_hostnames: Optional[List[StrictStr]] = None
    uid_traffic_rules_enabled: Optional[StrictBool] = None
    uid_vpn_custom_routing: Optional[List[StrictStr]] = None
    uid_vpn_default_dns_suffix: Optional[StrictStr] = None
    uid_vpn_masquerade_enabled: Optional[StrictBool] = None
    uid_vpn_max_connection_time_seconds: Optional[StrictInt] = None
    uid_vpn_sync_public_ip: Optional[StrictBool] = None
    uid_vpn_type: Optional[StrictStr] = None
    uid_workspace_url: Optional[StrictStr] = None
    upnp_lan_enabled: Optional[StrictBool] = None
    usergroup_id: Optional[StrictStr] = None
    vlan: Optional[StrictInt] = None
    vlan_enabled: Optional[StrictBool] = None
    vpn_client_configuration_remote_ip_override: Optional[StrictStr] = None
    vpn_client_configuration_remote_ip_override_enabled: Optional[StrictBool] = None
    vpn_client_default_route: Optional[StrictBool] = None
    vpn_client_pull_dns: Optional[StrictBool] = None
    vpn_protocol: Optional[StrictStr] = None
    vpn_type: Optional[StrictStr] = None
    vrrp_ip_subnet_gw1: Optional[StrictStr] = None
    vrrp_ip_subnet_gw2: Optional[StrictStr] = None
    vrrp_vrid: Optional[StrictInt] = None
    wan_dhcp_cos: Optional[StrictInt] = None
    wan_dhcp_options: Optional[List[NetworkWANDHCPOptions]] = None
    wan_dhcpv6_pd_size: Optional[StrictInt] = None
    wan_dns_preference: Optional[StrictStr] = None
    wan_dns1: Optional[StrictStr] = None
    wan_dns2: Optional[StrictStr] = None
    wan_dns3: Optional[StrictStr] = None
    wan_dns4: Optional[StrictStr] = None
    wan_dslite_remote_host: Optional[StrictStr] = None
    wan_egress_qos: Optional[StrictInt] = None
    wan_gateway: Optional[StrictStr] = None
    wan_gateway_v6: Optional[StrictStr] = None
    wan_ip: Optional[StrictStr] = None
    wan_ip_aliases: Optional[List[StrictStr]] = None
    wan_ipv6: Optional[StrictStr] = None
    wan_ipv6_dns_preference: Optional[StrictStr] = None
    wan_ipv6_dns1: Optional[StrictStr] = None
    wan_ipv6_dns2: Optional[StrictStr] = None
    wan_load_balance_type: Optional[StrictStr] = None
    wan_load_balance_weight: Optional[StrictInt] = None
    wan_netmask: Optional[StrictStr] = None
    wan_networkgroup: Optional[StrictStr] = None
    wan_pppoe_password_enabled: Optional[StrictBool] = None
    wan_pppoe_username_enabled: Optional[StrictBool] = None
    wan_prefixlen: Optional[StrictInt] = None
    wan_provider_capabilities: Optional[NetworkWANProviderCapabilities] = None
    wan_smartq_down_rate: Optional[StrictInt] = None
    wan_smartq_enabled: Optional[StrictBool] = None
    wan_smartq_up_rate: Optional[StrictInt] = None
    wan_type: Optional[StrictStr] = None
    wan_type_v6: Optional[StrictStr] = None
    wan_username: Optional[StrictStr] = None
    wan_vlan: Optional[StrictInt] = None
    wan_vlan_enabled: Optional[StrictBool] = None
    wireguard_client_configuration_file: Optional[StrictStr] = None
    wireguard_client_configuration_filename: Optional[StrictStr] = None
    wireguard_client_mode: Optional[StrictStr] = None
    wireguard_client_peer_ip: Optional[StrictStr] = None
    wireguard_client_peer_port: Optional[StrictInt] = None
    wireguard_client_peer_public_key: Optional[StrictStr] = None
    wireguard_client_preshared_key: Optional[StrictStr] = None
    wireguard_client_preshared_key_enabled: Optional[StrictBool] = None
    wireguard_interface: Optional[StrictStr] = None
    wireguard_local_wan_ip: Optional[StrictStr] = None
    wireguard_public_key: Optional[StrictStr] = None
    x_auth_key: Optional[StrictStr] = None
    x_ca_crt: Optional[StrictStr] = None
    x_ca_key: Optional[StrictStr] = None
    x_dh_key: Optional[StrictStr] = None
    x_ipsec_pre_shared_key: Optional[StrictStr] = None
    x_openvpn_password: Optional[StrictStr] = None
    x_openvpn_shared_secret_key: Optional[StrictStr] = None
    x_pptpc_password: Optional[StrictStr] = None
    x_server_crt: Optional[StrictStr] = None
    x_server_key: Optional[StrictStr] = None
    x_shared_client_crt: Optional[StrictStr] = None
    x_shared_client_key: Optional[StrictStr] = None
    x_wan_password: Optional[StrictStr] = None
    x_wireguard_private_key: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["_id", "attr_hidden", "attr_hidden_id", "attr_no_delete", "attr_no_edit", "auto_scale_enabled", "dhcp_relay_enabled", "dhcpd_boot_enabled", "dhcpd_boot_filename", "dhcpd_boot_server", "dhcpd_dns_1", "dhcpd_dns_2", "dhcpd_dns_3", "dhcpd_dns_4", "dhcpd_dns_enabled", "dhcpd_enabled", "dhcpd_gateway", "dhcpd_gateway_enabled", "dhcpd_ip_1", "dhcpd_ip_2", "dhcpd_ip_3", "dhcpd_leasetime", "dhcpd_mac_1", "dhcpd_mac_2", "dhcpd_mac_3", "dhcpd_ntp_1", "dhcpd_ntp_2", "dhcpd_ntp_enabled", "dhcpd_start", "dhcpd_stop", "dhcpd_tftp_server", "dhcpd_time_offset", "dhcpd_time_offset_enabled", "dhcpd_unifi_controller", "dhcpd_wins_1", "dhcpd_wins_2", "dhcpd_wins_enabled", "dhcpd_wpad_url", "dhcpdv6_allow_slaac", "dhcpdv6_dns_1", "dhcpdv6_dns_2", "dhcpdv6_dns_3", "dhcpdv6_dns_4", "dhcpdv6_dns_auto", "dhcpdv6_enabled", "dhcpdv6_leasetime", "dhcpdv6_start", "dhcpdv6_stop", "dhcpguard_enabled", "domain_name", "dpi_enabled", "dpigroup_id", "enabled", "exposed_to_site_vpn", "gateway_device", "gateway_type", "igmp_fastleave", "igmp_groupmembership", "igmp_maxresponse", "igmp_mcrtrexpiretime", "igmp_proxy_downstream", "igmp_proxy_upstream", "igmp_querier", "igmp_snooping", "igmp_supression", "interface_mtu", "interface_mtu_enabled", "internet_access_enabled", "ip_subnet", "ipsec_dh_group", "ipsec_dynamic_routing", "ipsec_encryption", "ipsec_esp_dh_group", "ipsec_esp_encryption", "ipsec_esp_hash", "ipsec_esp_lifetime", "ipsec_hash", "ipsec_ike_dh_group", "ipsec_ike_encryption", "ipsec_ike_hash", "ipsec_ike_lifetime", "ipsec_interface", "ipsec_key_exchange", "ipsec_local_identifier", "ipsec_local_identifier_enabled", "ipsec_local_ip", "ipsec_peer_ip", "ipsec_pfs", "ipsec_profile", "ipsec_remote_identifier", "ipsec_remote_identifier_enabled", "ipsec_separate_ikev2_networks", "ipv6_client_address_assignment", "ipv6_interface_type", "ipv6_pd_auto_prefixid_enabled", "ipv6_pd_interface", "ipv6_pd_prefixid", "ipv6_pd_start", "ipv6_pd_stop", "ipv6_ra_enabled", "ipv6_ra_preferred_lifetime", "ipv6_ra_priority", "ipv6_ra_valid_lifetime", "ipv6_setting_preference", "ipv6_single_network_interface", "ipv6_subnet", "ipv6_wan_delegation_type", "is_nat", "l2tp_allow_weak_ciphers", "l2tp_interface", "l2tp_local_wan_ip", "local_port", "lte_lan_enabled", "mac_override", "mac_override_enabled", "mdns_enabled", "name", "nat_outbound_ip_addresses", "network_isolation_enabled", "networkgroup", "openvpn_configuration", "openvpn_configuration_filename", "openvpn_interface", "openvpn_local_address", "openvpn_local_port", "openvpn_local_wan_ip", "openvpn_mode", "openvpn_remote_address", "openvpn_remote_host", "openvpn_remote_port", "openvpn_username", "pptpc_require_mppe", "pptpc_route_distance", "pptpc_server_ip", "pptpc_username", "priority", "purpose", "radiusprofile_id", "remote_site_id", "remote_site_subnets", "remote_vpn_subnets", "report_wan_event", "require_mschapv2", "route_distance", "setting_preference", "single_network_lan", "site_id", "uid_policy_enabled", "uid_policy_name", "uid_public_gateway_port", "uid_traffic_rules_allowed_ips_and_hostnames", "uid_traffic_rules_enabled", "uid_vpn_custom_routing", "uid_vpn_default_dns_suffix", "uid_vpn_masquerade_enabled", "uid_vpn_max_connection_time_seconds", "uid_vpn_sync_public_ip", "uid_vpn_type", "uid_workspace_url", "upnp_lan_enabled", "usergroup_id", "vlan", "vlan_enabled", "vpn_client_configuration_remote_ip_override", "vpn_client_configuration_remote_ip_override_enabled", "vpn_client_default_route", "vpn_client_pull_dns", "vpn_protocol", "vpn_type", "vrrp_ip_subnet_gw1", "vrrp_ip_subnet_gw2", "vrrp_vrid", "wan_dhcp_cos", "wan_dhcp_options", "wan_dhcpv6_pd_size", "wan_dns_preference", "wan_dns1", "wan_dns2", "wan_dns3", "wan_dns4", "wan_dslite_remote_host", "wan_egress_qos", "wan_gateway", "wan_gateway_v6", "wan_ip", "wan_ip_aliases", "wan_ipv6", "wan_ipv6_dns_preference", "wan_ipv6_dns1", "wan_ipv6_dns2", "wan_load_balance_type", "wan_load_balance_weight", "wan_netmask", "wan_networkgroup", "wan_pppoe_password_enabled", "wan_pppoe_username_enabled", "wan_prefixlen", "wan_provider_capabilities", "wan_smartq_down_rate", "wan_smartq_enabled", "wan_smartq_up_rate", "wan_type", "wan_type_v6", "wan_username", "wan_vlan", "wan_vlan_enabled", "wireguard_client_configuration_file", "wireguard_client_configuration_filename", "wireguard_client_mode", "wireguard_client_peer_ip", "wireguard_client_peer_port", "wireguard_client_peer_public_key", "wireguard_client_preshared_key", "wireguard_client_preshared_key_enabled", "wireguard_interface", "wireguard_local_wan_ip", "wireguard_public_key", "x_auth_key", "x_ca_crt", "x_ca_key", "x_dh_key", "x_ipsec_pre_shared_key", "x_openvpn_password", "x_openvpn_shared_secret_key", "x_pptpc_password", "x_server_crt", "x_server_key", "x_shared_client_crt", "x_shared_client_key", "x_wan_password", "x_wireguard_private_key"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of Network from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in nat_outbound_ip_addresses (list)
        _items = []
        if self.nat_outbound_ip_addresses:
            for _item in self.nat_outbound_ip_addresses:
                if _item:
                    _items.append(_item.to_dict())
            _dict['nat_outbound_ip_addresses'] = _items
        # override the default output from pydantic by calling `to_dict()` of each item in wan_dhcp_options (list)
        _items = []
        if self.wan_dhcp_options:
            for _item in self.wan_dhcp_options:
                if _item:
                    _items.append(_item.to_dict())
            _dict['wan_dhcp_options'] = _items
        # override the default output from pydantic by calling `to_dict()` of wan_provider_capabilities
        if self.wan_provider_capabilities:
            _dict['wan_provider_capabilities'] = self.wan_provider_capabilities.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of Network from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_id": obj.get("_id"),
            "attr_hidden": obj.get("attr_hidden"),
            "attr_hidden_id": obj.get("attr_hidden_id"),
            "attr_no_delete": obj.get("attr_no_delete"),
            "attr_no_edit": obj.get("attr_no_edit"),
            "auto_scale_enabled": obj.get("auto_scale_enabled"),
            "dhcp_relay_enabled": obj.get("dhcp_relay_enabled"),
            "dhcpd_boot_enabled": obj.get("dhcpd_boot_enabled"),
            "dhcpd_boot_filename": obj.get("dhcpd_boot_filename"),
            "dhcpd_boot_server": obj.get("dhcpd_boot_server"),
            "dhcpd_dns_1": obj.get("dhcpd_dns_1"),
            "dhcpd_dns_2": obj.get("dhcpd_dns_2"),
            "dhcpd_dns_3": obj.get("dhcpd_dns_3"),
            "dhcpd_dns_4": obj.get("dhcpd_dns_4"),
            "dhcpd_dns_enabled": obj.get("dhcpd_dns_enabled"),
            "dhcpd_enabled": obj.get("dhcpd_enabled"),
            "dhcpd_gateway": obj.get("dhcpd_gateway"),
            "dhcpd_gateway_enabled": obj.get("dhcpd_gateway_enabled"),
            "dhcpd_ip_1": obj.get("dhcpd_ip_1"),
            "dhcpd_ip_2": obj.get("dhcpd_ip_2"),
            "dhcpd_ip_3": obj.get("dhcpd_ip_3"),
            "dhcpd_leasetime": obj.get("dhcpd_leasetime"),
            "dhcpd_mac_1": obj.get("dhcpd_mac_1"),
            "dhcpd_mac_2": obj.get("dhcpd_mac_2"),
            "dhcpd_mac_3": obj.get("dhcpd_mac_3"),
            "dhcpd_ntp_1": obj.get("dhcpd_ntp_1"),
            "dhcpd_ntp_2": obj.get("dhcpd_ntp_2"),
            "dhcpd_ntp_enabled": obj.get("dhcpd_ntp_enabled"),
            "dhcpd_start": obj.get("dhcpd_start"),
            "dhcpd_stop": obj.get("dhcpd_stop"),
            "dhcpd_tftp_server": obj.get("dhcpd_tftp_server"),
            "dhcpd_time_offset": obj.get("dhcpd_time_offset"),
            "dhcpd_time_offset_enabled": obj.get("dhcpd_time_offset_enabled"),
            "dhcpd_unifi_controller": obj.get("dhcpd_unifi_controller"),
            "dhcpd_wins_1": obj.get("dhcpd_wins_1"),
            "dhcpd_wins_2": obj.get("dhcpd_wins_2"),
            "dhcpd_wins_enabled": obj.get("dhcpd_wins_enabled"),
            "dhcpd_wpad_url": obj.get("dhcpd_wpad_url"),
            "dhcpdv6_allow_slaac": obj.get("dhcpdv6_allow_slaac"),
            "dhcpdv6_dns_1": obj.get("dhcpdv6_dns_1"),
            "dhcpdv6_dns_2": obj.get("dhcpdv6_dns_2"),
            "dhcpdv6_dns_3": obj.get("dhcpdv6_dns_3"),
            "dhcpdv6_dns_4": obj.get("dhcpdv6_dns_4"),
            "dhcpdv6_dns_auto": obj.get("dhcpdv6_dns_auto"),
            "dhcpdv6_enabled": obj.get("dhcpdv6_enabled"),
            "dhcpdv6_leasetime": obj.get("dhcpdv6_leasetime"),
            "dhcpdv6_start": obj.get("dhcpdv6_start"),
            "dhcpdv6_stop": obj.get("dhcpdv6_stop"),
            "dhcpguard_enabled": obj.get("dhcpguard_enabled"),
            "domain_name": obj.get("domain_name"),
            "dpi_enabled": obj.get("dpi_enabled"),
            "dpigroup_id": obj.get("dpigroup_id"),
            "enabled": obj.get("enabled"),
            "exposed_to_site_vpn": obj.get("exposed_to_site_vpn"),
            "gateway_device": obj.get("gateway_device"),
            "gateway_type": obj.get("gateway_type"),
            "igmp_fastleave": obj.get("igmp_fastleave"),
            "igmp_groupmembership": obj.get("igmp_groupmembership"),
            "igmp_maxresponse": obj.get("igmp_maxresponse"),
            "igmp_mcrtrexpiretime": obj.get("igmp_mcrtrexpiretime"),
            "igmp_proxy_downstream": obj.get("igmp_proxy_downstream"),
            "igmp_proxy_upstream": obj.get("igmp_proxy_upstream"),
            "igmp_querier": obj.get("igmp_querier"),
            "igmp_snooping": obj.get("igmp_snooping"),
            "igmp_supression": obj.get("igmp_supression"),
            "interface_mtu": obj.get("interface_mtu"),
            "interface_mtu_enabled": obj.get("interface_mtu_enabled"),
            "internet_access_enabled": obj.get("internet_access_enabled"),
            "ip_subnet": obj.get("ip_subnet"),
            "ipsec_dh_group": obj.get("ipsec_dh_group"),
            "ipsec_dynamic_routing": obj.get("ipsec_dynamic_routing"),
            "ipsec_encryption": obj.get("ipsec_encryption"),
            "ipsec_esp_dh_group": obj.get("ipsec_esp_dh_group"),
            "ipsec_esp_encryption": obj.get("ipsec_esp_encryption"),
            "ipsec_esp_hash": obj.get("ipsec_esp_hash"),
            "ipsec_esp_lifetime": obj.get("ipsec_esp_lifetime"),
            "ipsec_hash": obj.get("ipsec_hash"),
            "ipsec_ike_dh_group": obj.get("ipsec_ike_dh_group"),
            "ipsec_ike_encryption": obj.get("ipsec_ike_encryption"),
            "ipsec_ike_hash": obj.get("ipsec_ike_hash"),
            "ipsec_ike_lifetime": obj.get("ipsec_ike_lifetime"),
            "ipsec_interface": obj.get("ipsec_interface"),
            "ipsec_key_exchange": obj.get("ipsec_key_exchange"),
            "ipsec_local_identifier": obj.get("ipsec_local_identifier"),
            "ipsec_local_identifier_enabled": obj.get("ipsec_local_identifier_enabled"),
            "ipsec_local_ip": obj.get("ipsec_local_ip"),
            "ipsec_peer_ip": obj.get("ipsec_peer_ip"),
            "ipsec_pfs": obj.get("ipsec_pfs"),
            "ipsec_profile": obj.get("ipsec_profile"),
            "ipsec_remote_identifier": obj.get("ipsec_remote_identifier"),
            "ipsec_remote_identifier_enabled": obj.get("ipsec_remote_identifier_enabled"),
            "ipsec_separate_ikev2_networks": obj.get("ipsec_separate_ikev2_networks"),
            "ipv6_client_address_assignment": obj.get("ipv6_client_address_assignment"),
            "ipv6_interface_type": obj.get("ipv6_interface_type"),
            "ipv6_pd_auto_prefixid_enabled": obj.get("ipv6_pd_auto_prefixid_enabled"),
            "ipv6_pd_interface": obj.get("ipv6_pd_interface"),
            "ipv6_pd_prefixid": obj.get("ipv6_pd_prefixid"),
            "ipv6_pd_start": obj.get("ipv6_pd_start"),
            "ipv6_pd_stop": obj.get("ipv6_pd_stop"),
            "ipv6_ra_enabled": obj.get("ipv6_ra_enabled"),
            "ipv6_ra_preferred_lifetime": obj.get("ipv6_ra_preferred_lifetime"),
            "ipv6_ra_priority": obj.get("ipv6_ra_priority"),
            "ipv6_ra_valid_lifetime": obj.get("ipv6_ra_valid_lifetime"),
            "ipv6_setting_preference": obj.get("ipv6_setting_preference"),
            "ipv6_single_network_interface": obj.get("ipv6_single_network_interface"),
            "ipv6_subnet": obj.get("ipv6_subnet"),
            "ipv6_wan_delegation_type": obj.get("ipv6_wan_delegation_type"),
            "is_nat": obj.get("is_nat"),
            "l2tp_allow_weak_ciphers": obj.get("l2tp_allow_weak_ciphers"),
            "l2tp_interface": obj.get("l2tp_interface"),
            "l2tp_local_wan_ip": obj.get("l2tp_local_wan_ip"),
            "local_port": obj.get("local_port"),
            "lte_lan_enabled": obj.get("lte_lan_enabled"),
            "mac_override": obj.get("mac_override"),
            "mac_override_enabled": obj.get("mac_override_enabled"),
            "mdns_enabled": obj.get("mdns_enabled"),
            "name": obj.get("name"),
            "nat_outbound_ip_addresses": [NetworkNATOutboundIPAddresses.from_dict(_item) for _item in obj.get("nat_outbound_ip_addresses")] if obj.get("nat_outbound_ip_addresses") is not None else None,
            "network_isolation_enabled": obj.get("network_isolation_enabled"),
            "networkgroup": obj.get("networkgroup"),
            "openvpn_configuration": obj.get("openvpn_configuration"),
            "openvpn_configuration_filename": obj.get("openvpn_configuration_filename"),
            "openvpn_interface": obj.get("openvpn_interface"),
            "openvpn_local_address": obj.get("openvpn_local_address"),
            "openvpn_local_port": obj.get("openvpn_local_port"),
            "openvpn_local_wan_ip": obj.get("openvpn_local_wan_ip"),
            "openvpn_mode": obj.get("openvpn_mode"),
            "openvpn_remote_address": obj.get("openvpn_remote_address"),
            "openvpn_remote_host": obj.get("openvpn_remote_host"),
            "openvpn_remote_port": obj.get("openvpn_remote_port"),
            "openvpn_username": obj.get("openvpn_username"),
            "pptpc_require_mppe": obj.get("pptpc_require_mppe"),
            "pptpc_route_distance": obj.get("pptpc_route_distance"),
            "pptpc_server_ip": obj.get("pptpc_server_ip"),
            "pptpc_username": obj.get("pptpc_username"),
            "priority": obj.get("priority"),
            "purpose": obj.get("purpose"),
            "radiusprofile_id": obj.get("radiusprofile_id"),
            "remote_site_id": obj.get("remote_site_id"),
            "remote_site_subnets": obj.get("remote_site_subnets"),
            "remote_vpn_subnets": obj.get("remote_vpn_subnets"),
            "report_wan_event": obj.get("report_wan_event"),
            "require_mschapv2": obj.get("require_mschapv2"),
            "route_distance": obj.get("route_distance"),
            "setting_preference": obj.get("setting_preference"),
            "single_network_lan": obj.get("single_network_lan"),
            "site_id": obj.get("site_id"),
            "uid_policy_enabled": obj.get("uid_policy_enabled"),
            "uid_policy_name": obj.get("uid_policy_name"),
            "uid_public_gateway_port": obj.get("uid_public_gateway_port"),
            "uid_traffic_rules_allowed_ips_and_hostnames": obj.get("uid_traffic_rules_allowed_ips_and_hostnames"),
            "uid_traffic_rules_enabled": obj.get("uid_traffic_rules_enabled"),
            "uid_vpn_custom_routing": obj.get("uid_vpn_custom_routing"),
            "uid_vpn_default_dns_suffix": obj.get("uid_vpn_default_dns_suffix"),
            "uid_vpn_masquerade_enabled": obj.get("uid_vpn_masquerade_enabled"),
            "uid_vpn_max_connection_time_seconds": obj.get("uid_vpn_max_connection_time_seconds"),
            "uid_vpn_sync_public_ip": obj.get("uid_vpn_sync_public_ip"),
            "uid_vpn_type": obj.get("uid_vpn_type"),
            "uid_workspace_url": obj.get("uid_workspace_url"),
            "upnp_lan_enabled": obj.get("upnp_lan_enabled"),
            "usergroup_id": obj.get("usergroup_id"),
            "vlan": obj.get("vlan"),
            "vlan_enabled": obj.get("vlan_enabled"),
            "vpn_client_configuration_remote_ip_override": obj.get("vpn_client_configuration_remote_ip_override"),
            "vpn_client_configuration_remote_ip_override_enabled": obj.get("vpn_client_configuration_remote_ip_override_enabled"),
            "vpn_client_default_route": obj.get("vpn_client_default_route"),
            "vpn_client_pull_dns": obj.get("vpn_client_pull_dns"),
            "vpn_protocol": obj.get("vpn_protocol"),
            "vpn_type": obj.get("vpn_type"),
            "vrrp_ip_subnet_gw1": obj.get("vrrp_ip_subnet_gw1"),
            "vrrp_ip_subnet_gw2": obj.get("vrrp_ip_subnet_gw2"),
            "vrrp_vrid": obj.get("vrrp_vrid"),
            "wan_dhcp_cos": obj.get("wan_dhcp_cos"),
            "wan_dhcp_options": [NetworkWANDHCPOptions.from_dict(_item) for _item in obj.get("wan_dhcp_options")] if obj.get("wan_dhcp_options") is not None else None,
            "wan_dhcpv6_pd_size": obj.get("wan_dhcpv6_pd_size"),
            "wan_dns_preference": obj.get("wan_dns_preference"),
            "wan_dns1": obj.get("wan_dns1"),
            "wan_dns2": obj.get("wan_dns2"),
            "wan_dns3": obj.get("wan_dns3"),
            "wan_dns4": obj.get("wan_dns4"),
            "wan_dslite_remote_host": obj.get("wan_dslite_remote_host"),
            "wan_egress_qos": obj.get("wan_egress_qos"),
            "wan_gateway": obj.get("wan_gateway"),
            "wan_gateway_v6": obj.get("wan_gateway_v6"),
            "wan_ip": obj.get("wan_ip"),
            "wan_ip_aliases": obj.get("wan_ip_aliases"),
            "wan_ipv6": obj.get("wan_ipv6"),
            "wan_ipv6_dns_preference": obj.get("wan_ipv6_dns_preference"),
            "wan_ipv6_dns1": obj.get("wan_ipv6_dns1"),
            "wan_ipv6_dns2": obj.get("wan_ipv6_dns2"),
            "wan_load_balance_type": obj.get("wan_load_balance_type"),
            "wan_load_balance_weight": obj.get("wan_load_balance_weight"),
            "wan_netmask": obj.get("wan_netmask"),
            "wan_networkgroup": obj.get("wan_networkgroup"),
            "wan_pppoe_password_enabled": obj.get("wan_pppoe_password_enabled"),
            "wan_pppoe_username_enabled": obj.get("wan_pppoe_username_enabled"),
            "wan_prefixlen": obj.get("wan_prefixlen"),
            "wan_provider_capabilities": NetworkWANProviderCapabilities.from_dict(obj.get("wan_provider_capabilities")) if obj.get("wan_provider_capabilities") is not None else None,
            "wan_smartq_down_rate": obj.get("wan_smartq_down_rate"),
            "wan_smartq_enabled": obj.get("wan_smartq_enabled"),
            "wan_smartq_up_rate": obj.get("wan_smartq_up_rate"),
            "wan_type": obj.get("wan_type"),
            "wan_type_v6": obj.get("wan_type_v6"),
            "wan_username": obj.get("wan_username"),
            "wan_vlan": obj.get("wan_vlan"),
            "wan_vlan_enabled": obj.get("wan_vlan_enabled"),
            "wireguard_client_configuration_file": obj.get("wireguard_client_configuration_file"),
            "wireguard_client_configuration_filename": obj.get("wireguard_client_configuration_filename"),
            "wireguard_client_mode": obj.get("wireguard_client_mode"),
            "wireguard_client_peer_ip": obj.get("wireguard_client_peer_ip"),
            "wireguard_client_peer_port": obj.get("wireguard_client_peer_port"),
            "wireguard_client_peer_public_key": obj.get("wireguard_client_peer_public_key"),
            "wireguard_client_preshared_key": obj.get("wireguard_client_preshared_key"),
            "wireguard_client_preshared_key_enabled": obj.get("wireguard_client_preshared_key_enabled"),
            "wireguard_interface": obj.get("wireguard_interface"),
            "wireguard_local_wan_ip": obj.get("wireguard_local_wan_ip"),
            "wireguard_public_key": obj.get("wireguard_public_key"),
            "x_auth_key": obj.get("x_auth_key"),
            "x_ca_crt": obj.get("x_ca_crt"),
            "x_ca_key": obj.get("x_ca_key"),
            "x_dh_key": obj.get("x_dh_key"),
            "x_ipsec_pre_shared_key": obj.get("x_ipsec_pre_shared_key"),
            "x_openvpn_password": obj.get("x_openvpn_password"),
            "x_openvpn_shared_secret_key": obj.get("x_openvpn_shared_secret_key"),
            "x_pptpc_password": obj.get("x_pptpc_password"),
            "x_server_crt": obj.get("x_server_crt"),
            "x_server_key": obj.get("x_server_key"),
            "x_shared_client_crt": obj.get("x_shared_client_crt"),
            "x_shared_client_key": obj.get("x_shared_client_key"),
            "x_wan_password": obj.get("x_wan_password"),
            "x_wireguard_private_key": obj.get("x_wireguard_private_key")
        })
        return _obj


