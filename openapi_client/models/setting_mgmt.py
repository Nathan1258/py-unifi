# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictInt, StrictStr
from pydantic import Field
from openapi_client.models.setting_mgmt_x_ssh_keys import SettingMgmtXSshKeys
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class SettingMgmt(BaseModel):
    """
    SettingMgmt
    """ # noqa: E501
    id: Optional[StrictStr] = Field(default=None, alias="_id")
    advanced_feature_enabled: Optional[StrictBool] = None
    alert_enabled: Optional[StrictBool] = None
    attr_hidden: Optional[StrictBool] = None
    attr_hidden_id: Optional[StrictStr] = None
    attr_no_delete: Optional[StrictBool] = None
    attr_no_edit: Optional[StrictBool] = None
    auto_upgrade: Optional[StrictBool] = None
    auto_upgrade_hour: Optional[StrictInt] = None
    boot_sound: Optional[StrictBool] = None
    debug_tools_enabled: Optional[StrictBool] = None
    direct_connect_enabled: Optional[StrictBool] = None
    key: Optional[StrictStr] = None
    led_enabled: Optional[StrictBool] = None
    outdoor_mode_enabled: Optional[StrictBool] = None
    site_id: Optional[StrictStr] = None
    unifi_idp_enabled: Optional[StrictBool] = None
    wifiman_enabled: Optional[StrictBool] = None
    x_mgmt_key: Optional[StrictStr] = None
    x_ssh_auth_password_enabled: Optional[StrictBool] = None
    x_ssh_bind_wildcard: Optional[StrictBool] = None
    x_ssh_enabled: Optional[StrictBool] = None
    x_ssh_keys: Optional[List[SettingMgmtXSshKeys]] = None
    x_ssh_md5passwd: Optional[StrictStr] = None
    x_ssh_password: Optional[StrictStr] = None
    x_ssh_sha512passwd: Optional[StrictStr] = None
    x_ssh_username: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["_id", "advanced_feature_enabled", "alert_enabled", "attr_hidden", "attr_hidden_id", "attr_no_delete", "attr_no_edit", "auto_upgrade", "auto_upgrade_hour", "boot_sound", "debug_tools_enabled", "direct_connect_enabled", "key", "led_enabled", "outdoor_mode_enabled", "site_id", "unifi_idp_enabled", "wifiman_enabled", "x_mgmt_key", "x_ssh_auth_password_enabled", "x_ssh_bind_wildcard", "x_ssh_enabled", "x_ssh_keys", "x_ssh_md5passwd", "x_ssh_password", "x_ssh_sha512passwd", "x_ssh_username"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of SettingMgmt from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in x_ssh_keys (list)
        _items = []
        if self.x_ssh_keys:
            for _item in self.x_ssh_keys:
                if _item:
                    _items.append(_item.to_dict())
            _dict['x_ssh_keys'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of SettingMgmt from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_id": obj.get("_id"),
            "advanced_feature_enabled": obj.get("advanced_feature_enabled"),
            "alert_enabled": obj.get("alert_enabled"),
            "attr_hidden": obj.get("attr_hidden"),
            "attr_hidden_id": obj.get("attr_hidden_id"),
            "attr_no_delete": obj.get("attr_no_delete"),
            "attr_no_edit": obj.get("attr_no_edit"),
            "auto_upgrade": obj.get("auto_upgrade"),
            "auto_upgrade_hour": obj.get("auto_upgrade_hour"),
            "boot_sound": obj.get("boot_sound"),
            "debug_tools_enabled": obj.get("debug_tools_enabled"),
            "direct_connect_enabled": obj.get("direct_connect_enabled"),
            "key": obj.get("key"),
            "led_enabled": obj.get("led_enabled"),
            "outdoor_mode_enabled": obj.get("outdoor_mode_enabled"),
            "site_id": obj.get("site_id"),
            "unifi_idp_enabled": obj.get("unifi_idp_enabled"),
            "wifiman_enabled": obj.get("wifiman_enabled"),
            "x_mgmt_key": obj.get("x_mgmt_key"),
            "x_ssh_auth_password_enabled": obj.get("x_ssh_auth_password_enabled"),
            "x_ssh_bind_wildcard": obj.get("x_ssh_bind_wildcard"),
            "x_ssh_enabled": obj.get("x_ssh_enabled"),
            "x_ssh_keys": [SettingMgmtXSshKeys.from_dict(_item) for _item in obj.get("x_ssh_keys")] if obj.get("x_ssh_keys") is not None else None,
            "x_ssh_md5passwd": obj.get("x_ssh_md5passwd"),
            "x_ssh_password": obj.get("x_ssh_password"),
            "x_ssh_sha512passwd": obj.get("x_ssh_sha512passwd"),
            "x_ssh_username": obj.get("x_ssh_username")
        })
        return _obj


