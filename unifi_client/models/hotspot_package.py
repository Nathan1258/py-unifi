# coding: utf-8

"""
    Unifi API

    Unifi Controller API

    The version of the OpenAPI document: 8.0.26
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional, Union
from pydantic import BaseModel, StrictBool, StrictFloat, StrictInt, StrictStr
from pydantic import Field
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class HotspotPackage(BaseModel):
    """
    HotspotPackage
    """ # noqa: E501
    id: Optional[StrictStr] = Field(default=None, alias="_id")
    amount: Optional[Union[StrictFloat, StrictInt]] = None
    attr_hidden: Optional[StrictBool] = None
    attr_hidden_id: Optional[StrictStr] = None
    attr_no_delete: Optional[StrictBool] = None
    attr_no_edit: Optional[StrictBool] = None
    charged_as: Optional[StrictStr] = None
    currency: Optional[StrictStr] = None
    custom_payment_fields_enabled: Optional[StrictBool] = None
    hours: Optional[StrictInt] = None
    index: Optional[StrictInt] = None
    limit_down: Optional[StrictInt] = None
    limit_overwrite: Optional[StrictBool] = None
    limit_quota: Optional[StrictInt] = None
    limit_up: Optional[StrictInt] = None
    name: Optional[StrictStr] = None
    payment_fields_address_enabled: Optional[StrictBool] = None
    payment_fields_address_required: Optional[StrictBool] = None
    payment_fields_city_enabled: Optional[StrictBool] = None
    payment_fields_city_required: Optional[StrictBool] = None
    payment_fields_country_enabled: Optional[StrictBool] = None
    payment_fields_country_required: Optional[StrictBool] = None
    payment_fields_email_enabled: Optional[StrictBool] = None
    payment_fields_email_required: Optional[StrictBool] = None
    payment_fields_first_name_enabled: Optional[StrictBool] = None
    payment_fields_first_name_required: Optional[StrictBool] = None
    payment_fields_last_name_enabled: Optional[StrictBool] = None
    payment_fields_last_name_required: Optional[StrictBool] = None
    payment_fields_state_enabled: Optional[StrictBool] = None
    payment_fields_state_required: Optional[StrictBool] = None
    payment_fields_zip_enabled: Optional[StrictBool] = None
    payment_fields_zip_required: Optional[StrictBool] = None
    site_id: Optional[StrictStr] = None
    trial_duration_minutes: Optional[StrictInt] = None
    trial_reset: Optional[Union[StrictFloat, StrictInt]] = None
    __properties: ClassVar[List[str]] = ["_id", "amount", "attr_hidden", "attr_hidden_id", "attr_no_delete", "attr_no_edit", "charged_as", "currency", "custom_payment_fields_enabled", "hours", "index", "limit_down", "limit_overwrite", "limit_quota", "limit_up", "name", "payment_fields_address_enabled", "payment_fields_address_required", "payment_fields_city_enabled", "payment_fields_city_required", "payment_fields_country_enabled", "payment_fields_country_required", "payment_fields_email_enabled", "payment_fields_email_required", "payment_fields_first_name_enabled", "payment_fields_first_name_required", "payment_fields_last_name_enabled", "payment_fields_last_name_required", "payment_fields_state_enabled", "payment_fields_state_required", "payment_fields_zip_enabled", "payment_fields_zip_required", "site_id", "trial_duration_minutes", "trial_reset"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of HotspotPackage from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of HotspotPackage from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "_id": obj.get("_id"),
            "amount": obj.get("amount"),
            "attr_hidden": obj.get("attr_hidden"),
            "attr_hidden_id": obj.get("attr_hidden_id"),
            "attr_no_delete": obj.get("attr_no_delete"),
            "attr_no_edit": obj.get("attr_no_edit"),
            "charged_as": obj.get("charged_as"),
            "currency": obj.get("currency"),
            "custom_payment_fields_enabled": obj.get("custom_payment_fields_enabled"),
            "hours": obj.get("hours"),
            "index": obj.get("index"),
            "limit_down": obj.get("limit_down"),
            "limit_overwrite": obj.get("limit_overwrite"),
            "limit_quota": obj.get("limit_quota"),
            "limit_up": obj.get("limit_up"),
            "name": obj.get("name"),
            "payment_fields_address_enabled": obj.get("payment_fields_address_enabled"),
            "payment_fields_address_required": obj.get("payment_fields_address_required"),
            "payment_fields_city_enabled": obj.get("payment_fields_city_enabled"),
            "payment_fields_city_required": obj.get("payment_fields_city_required"),
            "payment_fields_country_enabled": obj.get("payment_fields_country_enabled"),
            "payment_fields_country_required": obj.get("payment_fields_country_required"),
            "payment_fields_email_enabled": obj.get("payment_fields_email_enabled"),
            "payment_fields_email_required": obj.get("payment_fields_email_required"),
            "payment_fields_first_name_enabled": obj.get("payment_fields_first_name_enabled"),
            "payment_fields_first_name_required": obj.get("payment_fields_first_name_required"),
            "payment_fields_last_name_enabled": obj.get("payment_fields_last_name_enabled"),
            "payment_fields_last_name_required": obj.get("payment_fields_last_name_required"),
            "payment_fields_state_enabled": obj.get("payment_fields_state_enabled"),
            "payment_fields_state_required": obj.get("payment_fields_state_required"),
            "payment_fields_zip_enabled": obj.get("payment_fields_zip_enabled"),
            "payment_fields_zip_required": obj.get("payment_fields_zip_required"),
            "site_id": obj.get("site_id"),
            "trial_duration_minutes": obj.get("trial_duration_minutes"),
            "trial_reset": obj.get("trial_reset")
        })
        return _obj


